* java setting
1.oracle.com >> jdk download >> 설치
2.환경변수 설정. (내컴퓨터 오른쪽 마우스 >> 속성 >> 고급시스템설정 >> 환경 변수 >> 시스템변수) 
//////////////////////////새로만들기 //////////////////////////////////////////////
	
		변수이름					값	
      	2-1. JAVA_HOME		  			 C:\Program Files\Java\jdk1.8.0_202
	2-2. CLASSPATH(클래스의경로.지금설명못함)	.(현재폴더다라는것만알아둬나중에설명함)
	
///////////////////////////편집///////////////////////////////////////////////////
	2-3.  Path			%JAVA_HOME%\bin; (맨앞에)

3.설정 확인 (cmd) 커맨드를 열때 환경변수를 읽어온다.


자바라는 사람이 만든파일을 기계어로 바꾸는 작업 = 컴파일한다.
그걸 javac (자바씨) 라는 명령어


예) cmd - 계산기. calc

path 로 직접안가고도 접근할수있게 해준다.



앞으로 bin(바이너리-실행파일이위치한폴더)과 
       lib(라이브러리-? ) 라는 폴더를 많이 보게될거다.


자바라는 명령어는 jre 설치하는 순간 윈도우에 자동으로 등록이된다.
그래서 javac 는 개발시에 필요한거라서 일반사람들이 필요없으니까 jdk에만있다.
자동인식이안되니까 인식시키자. 


이거 꼭 알아 둬야돼
cmd 창에서 
폴더이동하기. change delectory
 cd   .  현재폴더 아무것도없는것. 현재.
 cd  ..  한칸위에 
 cd  \   최상위 

------------------------------------------------------------------------------------------------


*실행 방법.

   					(byte code)- 우리가봐도 뭔소린지 모르는 코드
* .java		>>	compile	    >>	*.class		   >>	        run      >>     result
HelloJava.java				HelloJava.class				   Hello java !!!!
	javac HelloJava.java                                      java Hellojava






--javac <options> <sourcefile> 
--java [-options] class
옵션은 안줘도되고 

--리눅스공부해둘것. 20명중에4~	5명은한다.
-- c: 
-- cd ja 탭 . cd ja 탭
-- cd 
--
--public class HelloJava
{
	public static void main(String args[])
	{
		System.out.println("Hello Java !!!!");
	}
}
--idr
-- java HelloJava

--



------------------------------------------------------------

에디트플러스에서 자동으로 해주게하려면

도구 기본설정 그룹이름(compile) : 메뉴제목: compile ,
                                명령: javac 위치 ,
                               인수 파일 이름 
				파일 디렉토리

추가run  java위치 확장자뺀파일이름 파일디렉토리 

도구 문서 템플릿 자바 열기
------------------------------------------------------------------------

순서
1.변수variable(자료형, data type)
2.연산자(operator)
3.제어문(조건문condition[if,switch ~ case],반복문roof[for, while, do ~while])
4.class (일반, 추상, 내부, interface), 상속
 - field (속성)
 - method (기능)

5. package
   -사용자 정의 package
   system package
	-java.lang
	-java.io
	-java.net
	-java.util
	-java.awt
	-java.sql
	-...
	-엄청많아
-----------------------------------------------------------------------------
*접근제어자 (access modifier)
 private 	자신의 클래스 안에서만 사용가능.
 default(생략)	private + 같은 package(폴더)안에서는 사용 가능.
 protected	default + package가 달라도 두 클래스가 상속 관계일 경우 사용가능.
 public		조건 제한 없이 사용가능.

*자료형 (data type)
 data type
  - 기본형 DT : DT				size	etc

    - 논리형	bollean				1byte	true, false

    - 문자형	char				2	'1','a','김',   'abc' << X
							특수문자 : '\t'(탭),'\n'(개행),
					                	'\''('), '\"'("),'\\'(\)     
(문자 하나. 오라클의 문자열과는 달라. )
    - 숫자형	
       
       -정수형	byte				1
                short				2
                int				4
                long				8	
       -실수형	float				4
		double				8

  - 참조형 DT : object, 배열(array)

*명명규칙 :

1. 영문, 숫자, 한글가능, 영문으로 시작.(숫자시작X)
2. 클래스는 대문자로, 메소드나 변수는 소문자로 시작.
   합성어의 경우 단어의 첫글자를 대문자로. (camel case)
3. 특수문자 사용 X (단, _ $는 가능.)
4. 예약어 사용 X

= 주석문.

// : 한줄 주석
---------------------------------------------------
/*
.
.
.
*/ : 여러줄 주석
----------------------------------------------------
/**
*
*
*/ : document 주석


1.변수(variable) : 하나의 값을 저장하는 공간.
 1-1. 기본형(primitive) data type 
    1-1-1.선언
	형식)
	 접근제어자 자료형 변수명;
	예)
	private int age;
	char gender;
	public String carName;
	boolean flag;


    1-1-2.사용(값저장, 값할당)
        형식)
	변수명= 값;
	예)
	age = 25;
	gender = '남';
	carName = "쏘나타";
	flag = true;


	>>>>>>>>>>1,2 동시에..
	형식)
	접근제어자 자료형 변수명 = 값;
	예)
	private int age = 25;
	char gender = '여';
	public String carName = "쏘나타";
	boolean flag = true;
 1-2. 참조형(reference) data type



2.연산자(operator)
 2-1.단항연산자
     a. 1증가(감소) 연산자 : ++,--
	변수++ : 선실행 후증가
	++변수 : 선증가 후실행
	예)
	int x = 10;
	s.o.p(x);	10
	s.o.p(x++);     10	11	
	s.o.p(--x);	10	10
	s.o.p(x++);	10	11
	s.o.p(++x);	12	12
	s.o.p(x--);	12	11
	s.o.p(--x);	10	10
	s.o.p(x++);	10	11
	s.o.p(x);	11
+x
-x


  2-2.이항연산자
	a.산술연산자 : * , / , %(나머지), +, -
	b.비교연산자
       	 >, >=, <, <=, ==, != 
	 instance of : 객체의 type 비교
	c.논리연산
	 && (and)
	 || (or)
	 

  2-3.삼항연산자
	a.조건(conditions) ? 값1 : 값2;
	 조건 true >> 값1
	      faluse >> 값2
  
  2-4. 대입연산자 : = , +=, -=, *=, /=, %=

test)
int x = 10; 
x의 값을 1증가시키는 방법?